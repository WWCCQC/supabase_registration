/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id
 */

require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkMissingNationalId() {
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id...\n');

  // ‡∏ô‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id
  const { count: missingCount } = await supabase
    .from('technicians')
    .select('*', { count: 'exact', head: true })
    .or('national_id.is.null,national_id.eq.');
  
  console.log(`‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id: ${missingCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);

  if (missingCount > 0) {
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id
    const { data } = await supabase
      .from('technicians')
      .select('tech_id, full_name, work_type, provider, rsm, national_id')
      .or('national_id.is.null,national_id.eq.')
      .limit(20);
    
    console.log(`üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id (‡πÅ‡∏™‡∏î‡∏á ${Math.min(20, missingCount)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):\n`);
    data.forEach((row, idx) => {
      console.log(`${idx + 1}. tech_id: ${row.tech_id}`);
      console.log(`   full_name: ${row.full_name}`);
      console.log(`   work_type: ${row.work_type || 'N/A'}`);
      console.log(`   provider: ${row.provider || 'N/A'}`);
      console.log(`   rsm: ${row.rsm || 'N/A'}`);
      console.log(`   national_id: ${row.national_id || 'NULL'}`);
      console.log('');
    });
  }

  // ‡∏ô‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ national_id
  const { count: withIdCount } = await supabase
    .from('technicians')
    .select('*', { count: 'exact', head: true })
    .not('national_id', 'is', null)
    .not('national_id', 'eq', '');
  
  console.log(`‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ national_id: ${withIdCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
  
  // ‡∏ô‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const { count: totalCount } = await supabase
    .from('technicians')
    .select('*', { count: 'exact', head: true });
  
  console.log(`üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
  console.log(`\nüìä ‡∏™‡∏£‡∏∏‡∏õ: ${withIdCount} + ${missingCount} = ${withIdCount + missingCount}`);
  
  if (missingCount === 18) {
    console.log('\n‚úÖ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà API ‡πÅ‡∏™‡∏î‡∏á 2,916 ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô 2,934!');
    console.log('   API ‡∏Å‡∏≥‡∏•‡∏±‡∏á filter ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ national_id ‡∏≠‡∏≠‡∏Å');
  }
}

checkMissingNationalId();
