/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ national_id ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
 */

require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkDuplicateNationalId() {
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ national_id ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô...\n');

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  let allData = [];
  let from = 0;
  const pageSize = 1000;

  while (true) {
    const { data, error } = await supabase
      .from('technicians')
      .select('tech_id, national_id, full_name')
      .range(from, from + pageSize - 1);
    
    if (error) throw error;
    if (!data || data.length === 0) break;
    
    allData = allData.concat(data);
    
    if (data.length < pageSize) break;
    from += pageSize;
  }

  console.log(`üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${allData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);

  // ‡∏´‡∏≤ national_id ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
  const nationalIdMap = new Map();
  allData.forEach(row => {
    const nationalId = row.national_id;
    if (nationalIdMap.has(nationalId)) {
      nationalIdMap.get(nationalId).push(row);
    } else {
      nationalIdMap.set(nationalId, [row]);
    }
  });

  // ‡∏´‡∏≤ national_id ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  const duplicates = Array.from(nationalIdMap.entries())
    .filter(([_, rows]) => rows.length > 1);
  
  const uniqueNationalIds = nationalIdMap.size;
  const totalRows = allData.length;
  const duplicateRows = totalRows - uniqueNationalIds;

  console.log(`üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô national_id ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô: ${uniqueNationalIds}`);
  console.log(`üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥: ${duplicateRows} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);

  if (duplicates.length > 0) {
    console.log(`‚ö†Ô∏è  ‡∏û‡∏ö national_id ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô: ${duplicates.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
    duplicates.forEach(([nationalId, rows]) => {
      console.log(`\nüìã National ID: ${nationalId} (‡∏õ‡∏£‡∏≤‡∏Å‡∏è ${rows.length} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)`);
      rows.forEach((row, idx) => {
        console.log(`   ${idx + 1}. tech_id: ${row.tech_id} - ${row.full_name}`);
      });
    });
    
    console.log(`\n‚úÖ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà API ‡πÅ‡∏™‡∏î‡∏á ${uniqueNationalIds} ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô ${totalRows}!`);
    console.log(`   API ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏±‡∏ö‡πÅ‡∏ö‡∏ö unique national_id ‡∏ã‡∏∂‡πà‡∏á‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡∏ô‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô 1`);
  } else {
    console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö national_id ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô');
  }
}

checkDuplicateNationalId();
